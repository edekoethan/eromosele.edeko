---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import withBase from '../lib/withBase';

export interface Props {
	title: string;
	description: string;
	image?: string;
	ogType?: string;
}

const { title, description, image = '/social_img.webp', ogType = 'website' } = Astro.props;
const resolvedImage = withBase(image);
// Build an absolute canonical URL using SITE (set in astro.config.mjs) + the current path
const siteOrigin = (import.meta.env.SITE || '').replace(/\/$/, '');
const baseUrl = (import.meta.env.BASE_URL || '/').replace(/\/$/, '');
const canonicalPathRaw = Astro.url?.pathname || '/';
// If Astro.url.pathname already includes the base, strip it to avoid duplication
const canonicalPath = canonicalPathRaw.startsWith(baseUrl)
	? canonicalPathRaw.slice(baseUrl.length) || '/'
	: canonicalPathRaw;
const canonicalUrl = siteOrigin ? siteOrigin + canonicalPath : canonicalPath;
// Ensure metaImage is a full absolute URL string we can use in meta tags.
// If resolvedImage is empty (no image provided), fall back to the default social image.
let metaImage: string;
try {
	if (resolvedImage) {
		// If resolvedImage is already absolute (starts with http), URL(...) will keep it.
		// If it's root-relative, ensure we resolve it against the site origin so meta image is absolute.
		if (/^https?:\/\//.test(resolvedImage)) {
			metaImage = resolvedImage;
		} else if (siteOrigin) {
			metaImage = siteOrigin + resolvedImage;
		} else {
			metaImage = new URL(resolvedImage, Astro.url).toString();
		}
	} else {
		metaImage = siteOrigin ? siteOrigin + withBase('/social_img.webp') : new URL(withBase('/social_img.webp'), Astro.url).toString();
	}
} catch (e) {
	// Fallback: use absolute path to social image on the configured site
	metaImage = `${Astro.url.pathname || ''}${withBase('/social_img.webp')}`;
}
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href={withBase('/favicon.svg')} />
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={ogType} />
	<meta property="og:url" content={canonicalUrl} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={metaImage} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
	<meta property="twitter:url" content={canonicalUrl} />
	<link rel="canonical" href={canonicalUrl} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={metaImage} />
